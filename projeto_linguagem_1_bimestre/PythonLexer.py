# Generated from Python.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,28,180,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,1,0,1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,
        3,1,4,1,4,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,
        8,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,
        14,1,15,1,15,1,15,1,16,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,
        19,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,
        22,1,22,1,23,1,23,5,23,129,8,23,10,23,12,23,132,9,23,1,24,4,24,135,
        8,24,11,24,12,24,136,1,24,1,24,4,24,141,8,24,11,24,12,24,142,3,24,
        145,8,24,1,25,1,25,5,25,149,8,25,10,25,12,25,152,9,25,1,25,1,25,
        1,25,5,25,157,8,25,10,25,12,25,160,9,25,1,25,3,25,163,8,25,1,26,
        4,26,166,8,26,11,26,12,26,167,1,26,1,26,1,27,1,27,5,27,174,8,27,
        10,27,12,27,177,9,27,1,27,1,27,0,0,28,1,1,3,2,5,3,7,4,9,5,11,6,13,
        7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,
        37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,1,0,
        7,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,
        3,0,10,10,13,13,34,34,3,0,10,10,13,13,39,39,3,0,9,10,13,13,32,32,
        2,0,10,10,13,13,188,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,
        0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,
        0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,
        0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,
        0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,
        0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,1,57,1,0,
        0,0,3,59,1,0,0,0,5,61,1,0,0,0,7,67,1,0,0,0,9,69,1,0,0,0,11,71,1,
        0,0,0,13,74,1,0,0,0,15,76,1,0,0,0,17,81,1,0,0,0,19,87,1,0,0,0,21,
        89,1,0,0,0,23,91,1,0,0,0,25,93,1,0,0,0,27,95,1,0,0,0,29,97,1,0,0,
        0,31,99,1,0,0,0,33,102,1,0,0,0,35,105,1,0,0,0,37,107,1,0,0,0,39,
        109,1,0,0,0,41,112,1,0,0,0,43,115,1,0,0,0,45,120,1,0,0,0,47,126,
        1,0,0,0,49,134,1,0,0,0,51,162,1,0,0,0,53,165,1,0,0,0,55,171,1,0,
        0,0,57,58,5,61,0,0,58,2,1,0,0,0,59,60,5,59,0,0,60,4,1,0,0,0,61,62,
        5,112,0,0,62,63,5,114,0,0,63,64,5,105,0,0,64,65,5,110,0,0,65,66,
        5,116,0,0,66,6,1,0,0,0,67,68,5,40,0,0,68,8,1,0,0,0,69,70,5,41,0,
        0,70,10,1,0,0,0,71,72,5,105,0,0,72,73,5,102,0,0,73,12,1,0,0,0,74,
        75,5,58,0,0,75,14,1,0,0,0,76,77,5,101,0,0,77,78,5,108,0,0,78,79,
        5,115,0,0,79,80,5,101,0,0,80,16,1,0,0,0,81,82,5,119,0,0,82,83,5,
        104,0,0,83,84,5,105,0,0,84,85,5,108,0,0,85,86,5,101,0,0,86,18,1,
        0,0,0,87,88,5,123,0,0,88,20,1,0,0,0,89,90,5,125,0,0,90,22,1,0,0,
        0,91,92,5,42,0,0,92,24,1,0,0,0,93,94,5,47,0,0,94,26,1,0,0,0,95,96,
        5,43,0,0,96,28,1,0,0,0,97,98,5,45,0,0,98,30,1,0,0,0,99,100,5,61,
        0,0,100,101,5,61,0,0,101,32,1,0,0,0,102,103,5,33,0,0,103,104,5,61,
        0,0,104,34,1,0,0,0,105,106,5,60,0,0,106,36,1,0,0,0,107,108,5,62,
        0,0,108,38,1,0,0,0,109,110,5,60,0,0,110,111,5,61,0,0,111,40,1,0,
        0,0,112,113,5,62,0,0,113,114,5,61,0,0,114,42,1,0,0,0,115,116,5,84,
        0,0,116,117,5,114,0,0,117,118,5,117,0,0,118,119,5,101,0,0,119,44,
        1,0,0,0,120,121,5,70,0,0,121,122,5,97,0,0,122,123,5,108,0,0,123,
        124,5,115,0,0,124,125,5,101,0,0,125,46,1,0,0,0,126,130,7,0,0,0,127,
        129,7,1,0,0,128,127,1,0,0,0,129,132,1,0,0,0,130,128,1,0,0,0,130,
        131,1,0,0,0,131,48,1,0,0,0,132,130,1,0,0,0,133,135,7,2,0,0,134,133,
        1,0,0,0,135,136,1,0,0,0,136,134,1,0,0,0,136,137,1,0,0,0,137,144,
        1,0,0,0,138,140,5,46,0,0,139,141,7,2,0,0,140,139,1,0,0,0,141,142,
        1,0,0,0,142,140,1,0,0,0,142,143,1,0,0,0,143,145,1,0,0,0,144,138,
        1,0,0,0,144,145,1,0,0,0,145,50,1,0,0,0,146,150,5,34,0,0,147,149,
        8,3,0,0,148,147,1,0,0,0,149,152,1,0,0,0,150,148,1,0,0,0,150,151,
        1,0,0,0,151,153,1,0,0,0,152,150,1,0,0,0,153,163,5,34,0,0,154,158,
        5,39,0,0,155,157,8,4,0,0,156,155,1,0,0,0,157,160,1,0,0,0,158,156,
        1,0,0,0,158,159,1,0,0,0,159,161,1,0,0,0,160,158,1,0,0,0,161,163,
        5,39,0,0,162,146,1,0,0,0,162,154,1,0,0,0,163,52,1,0,0,0,164,166,
        7,5,0,0,165,164,1,0,0,0,166,167,1,0,0,0,167,165,1,0,0,0,167,168,
        1,0,0,0,168,169,1,0,0,0,169,170,6,26,0,0,170,54,1,0,0,0,171,175,
        5,35,0,0,172,174,8,6,0,0,173,172,1,0,0,0,174,177,1,0,0,0,175,173,
        1,0,0,0,175,176,1,0,0,0,176,178,1,0,0,0,177,175,1,0,0,0,178,179,
        6,27,0,0,179,56,1,0,0,0,10,0,130,136,142,144,150,158,162,167,175,
        1,6,0,0
    ]

class PythonLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    IDENTIFIER = 24
    NUMBER = 25
    STRING = 26
    WS = 27
    COMMENT = 28

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'='", "';'", "'print'", "'('", "')'", "'if'", "':'", "'else'", 
            "'while'", "'{'", "'}'", "'*'", "'/'", "'+'", "'-'", "'=='", 
            "'!='", "'<'", "'>'", "'<='", "'>='", "'True'", "'False'" ]

    symbolicNames = [ "<INVALID>",
            "IDENTIFIER", "NUMBER", "STRING", "WS", "COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "IDENTIFIER", "NUMBER", "STRING", 
                  "WS", "COMMENT" ]

    grammarFileName = "Python.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


